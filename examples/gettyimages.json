{
  "swagger": "2.0",
  "info": {
    "version": "3",
    "title": "Getty Images API"
  },
  "host": "api.gettyimages.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v3/downloads/{id}": {},
    "/v3/artists/images": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "***BETA*** Search for images by a photographer",
        "operationId": "Artists_GetImagesByArtist",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "artist_name",
            "in": "query",
            "description": "Name of artist for desired images",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields. Allows restricting which fields are returned. If no fields are selected, the summary_set of fields are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "alternative_ids",
                "asset_family",
                "asset_type",
                "caption",
                "collection_code",
                "collection_name",
                "comp",
                "date_submitted",
                "keywords",
                "license_model",
                "title"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default page is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default page_size is 10, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Artists.ImageSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/artists/videos": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "***BETA*** Search for videos by a photographer",
        "operationId": "Artists_GetVideosByArtist",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "artist_name",
            "in": "query",
            "description": "Name of artist for desired images",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields. Allows restricting which fields are returned. If no fields are selected, the summary_set of fields are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "alternative_ids",
                "asset_family",
                "asset_type",
                "caption",
                "collection_code",
                "collection_name",
                "comp",
                "date_submitted",
                "keywords",
                "license_model",
                "title"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default page is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default page_size is 10, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Artists.VideoSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/asset-changes/change-sets": {
      "put": {
        "tags": [
          "AssetChanges"
        ],
        "summary": "Generates asset changes.",
        "operationId": "AssetChanges_PutAssetChanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "Specifies the id of the channel for the asset data. Valid channel ids can be found in the results of the Get Partner Channel query.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batch_size",
            "in": "query",
            "description": "Specifies the number of assets to return. The default is 10; maximum is 500.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "403": {
            "description": "Your access token does not authorize access to this resource"
          },
          "404": {
            "description": "The channel you specified does not exist"
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetChanges"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/asset-changes/change-sets/{change-set-id}": {
      "delete": {
        "tags": [
          "AssetChanges"
        ],
        "summary": "Confirm asset changes acknowledges receipt of asset changes.",
        "operationId": "AssetChanges_DeleteAssetChanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "change-set-id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "403": {
            "description": "Your access token does not authorize access to this resource"
          },
          "404": {
            "description": "Transaction was not found"
          },
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/v3/asset-changes/channels": {
      "get": {
        "tags": [
          "AssetChanges"
        ],
        "summary": "Retrieves the channel data for the partner. This data can be used to populate the channel_id parameter in the Put Asset Changes query.",
        "operationId": "AssetChanges_GetPartnerChannel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerChannelList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v3/asset-registrations": {
      "post": {
        "tags": [
          "AssetRegistration"
        ],
        "summary": "Register a list of customer assets.",
        "operationId": "AssetRegistration_Register",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Specify JSON containing an array of asset ids to register.  Limited to 500 asset ids per call.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterAssetsRequest"
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - The assets were successfully registered.",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "401": {
            "description": "AuthorizationTokenRequired - Authorization token was missing or not valid."
          },
          "500": {
            "description": "AssetRegistrationFailed - There was a failure when registering assets."
          }
        },
        "deprecated": false
      }
    },
    "/v3/boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Get all boards that the user participates in",
        "operationId": "Boards_GetAllBoards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_relationship",
            "in": "query",
            "description": "Search for boards the user owns or has been invited to as an editor.",
            "required": false,
            "type": "string",
            "enum": [
              "owned",
              "invited"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Request results starting at a page number (default is 1).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Request number of boards to return in each page. (default is 30).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort the list of boards by last update date or name. Defaults to date_last_updated_descending.",
            "required": false,
            "type": "string",
            "enum": [
              "date_last_updated_descending",
              "date_last_updated_ascending",
              "name_ascending",
              "name_decending"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BoardList"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Create a new board",
        "operationId": "Boards_CreateBoard",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "new_board",
            "in": "body",
            "description": "Specify a name and description of the board to create (name is required).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardInfo"
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BoardCreated"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/boards/{board_id}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Get assets and metadata for a specific board",
        "operationId": "Boards_GetBoard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BoardDetail"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Update a board",
        "operationId": "Boards_UpdateBoard",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "board_info",
            "in": "body",
            "description": "Specify a new name and description for the board (name is required).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BoardInfo"
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Delete a board",
        "operationId": "Boards_DeleteBoard",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          },
          "403": {
            "description": "InsufficientAccess"
          }
        },
        "deprecated": false
      }
    },
    "/v3/boards/{board_id}/assets": {
      "put": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Add assets to a board",
        "operationId": "Boards_AddAssets",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "board_assets",
            "in": "body",
            "description": "List assets to add to the board.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardAsset"
              }
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AddBoardAssetsResult"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Remove assets from a board",
        "operationId": "Boards_RemoveAssets",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "asset_ids",
            "in": "query",
            "description": "List the assets to be removed from the board.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/boards/{board_id}/assets/{asset_id}": {
      "put": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Add an asset to a board",
        "operationId": "Boards_AddAsset",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "403": {
            "description": "AssetNotFound"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Remove an asset from a board",
        "operationId": "Boards_RemoveAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/boards/{board_id}/comments": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Get comments from a board",
        "operationId": "Boards_GetComments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommentsList"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Add a comment to a board",
        "operationId": "Boards_AddComment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "comment",
            "in": "body",
            "description": "Comment to be added to the board.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentRequest"
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CommentCreated"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "InsufficientAccess"
          },
          "404": {
            "description": "BoardNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/boards/{board_id}/comments/{comment_id}": {
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "***BETA*** Delete a comment from a board",
        "operationId": "Boards_DeleteComment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "board_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "CommentDeleted",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "BoardNotFound"
          },
          "403": {
            "description": "InsufficientAccess"
          }
        },
        "deprecated": false
      }
    },
    "/v3/collections": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Gets collections applicable for the customer.",
        "operationId": "Collections_GetCollections",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Collections.CollectionsList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Gets countries codes and names.",
        "operationId": "Countries_GetCountries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Countries.CountriesList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/downloads": {
      "get": {
        "tags": [
          "Downloads"
        ],
        "summary": "Returns information about a customer's downloaded assets.",
        "operationId": "Downloads_GetDownloads",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "company_downloads",
            "in": "query",
            "description": "If specified, returns the list of previously downloaded images for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "If specified, select assets downloaded on or before this date. Dates should be submitted in ISO\r\n                8601 format (i.e., YYYY-MM-DD hh:mm:ss.sss). If time is omitted, midnight is assumed. Date/times are UTC.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "product_type",
            "in": "query",
            "description": "Specifies product type to be included in the previous download results. To get previous iStockPhoto credit downloads, credit_pack must be selected.",
            "required": false,
            "type": "string",
            "enum": [
              "easyaccess",
              "editorialsubscription",
              "imagepack",
              "premiumaccess",
              "royaltyfreesubscription",
              "credit_pack"
            ]
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "If specified, select assets downloaded on or after this date. Dates should be submitted in ISO\r\n                8601 format (i.e., YYYY-MM-DD hh:mm:ss.sss). If time is omitted, midnight is assumed. Date/times are UTC.",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Downloads.GetDownloadsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/downloads/images/{id}": {
      "post": {
        "tags": [
          "Downloads"
        ],
        "summary": "Download an image",
        "description": "The single step download call returns either a redirect or a response message with the URI to download the largest\r\n                image available.\r\n                Returns HTTP status code 303 Redirect to download URI or HTTP status code 200.",
        "operationId": "Downloads_PostDownloads",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "download_details",
            "in": "body",
            "description": "<remarks>\r\n                    Additional information required from specific customers when downloading. \r\n                    Only users who have been set up with a project code by Getty Images Sales need to use this field.\r\n                </remarks>",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Downloads.PremiumAccessDownloadData"
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "<remarks>\r\n                    Id of image to download.\r\n                </remarks>",
            "required": true,
            "type": "string"
          },
          {
            "name": "auto_download",
            "in": "query",
            "description": "<remarks>\r\n                    Specifies whether to auto-download the image. If true is specified, a 303 SeeOther status is returned with a\r\n                    Location header set to the location of the image.\r\n                    If false is specified, the download URI will be returned in the response message.\r\n                </remarks>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "file_type",
            "in": "query",
            "description": "<remarks>\r\n                    File Type expressed with three character file extension.\r\n                </remarks>",
            "required": false,
            "type": "string",
            "enum": [
              "eps",
              "jpg"
            ]
          },
          {
            "name": "height",
            "in": "query",
            "description": "<remarks>\r\n                    Specifies the pixel height of the particular image to download.\r\n                    Available heights can be found in the images/{ids} response for the specific image.\r\n                    If left blank, it will return the largest available size.\r\n                </remarks>",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "<remarks>\r\n                    Identifier of the instance for the selected product offering type.\r\n                </remarks>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "product_type",
            "in": "query",
            "description": "<remarks>\r\n                    Product type.\r\n                </remarks>",
            "required": false,
            "type": "string",
            "enum": [
              "easyaccess",
              "editorialsubscription",
              "imagepack",
              "premiumaccess",
              "royaltyfreesubscription",
              "credit_pack"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          },
          "303": {
            "description": "See Other"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "ImageNotFound"
          },
          "400": {
            "description": "InvalidRequestParameterValue"
          }
        },
        "deprecated": false
      }
    },
    "/v3/downloads/videos/{id}": {
      "post": {
        "tags": [
          "Downloads"
        ],
        "summary": "Download a video",
        "description": "The single step download call returns either a redirect or a response message with the URI to download the largest\r\n                video available.\r\n                Returns HTTP status code 303 Redirect to download URI or HTTP status code 200.",
        "operationId": "Downloads_PostVideoDownloads",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "<remarks>\r\n                    Id of video to download.\r\n                </remarks>",
            "required": true,
            "type": "string"
          },
          {
            "name": "auto_download",
            "in": "query",
            "description": "<remarks>\r\n                    Specifies whether to auto-download the video. If true is specified, a 303 SeeOther status is returned with a\r\n                    Location header set to the location of the video.\r\n                    If false is specified, the download URI will be returned in the response message.\r\n                </remarks>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "<remarks>\r\n                    Identifier of the instance for the selected product offering type.\r\n                </remarks>",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Specifies the size to be downloaded.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          },
          "303": {
            "description": "See Other"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "VideoNotFound"
          },
          "400": {
            "description": "ProductIdNotSpecified"
          }
        },
        "deprecated": false
      }
    },
    "/v3/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get metadata for multiple events",
        "description": "Returns an array of event metadata",
        "operationId": "Events_GetBatch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "child_event_count",
                "editorial_segments",
                "hero_image",
                "image_count",
                "location",
                "name",
                "start_date",
                "type"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "A comma separated list of event ids.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Events.EventsResult"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "404": {
            "description": "EventNotFound"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get metadata for a single event",
        "description": "Returns an array of event metadata",
        "operationId": "Events_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "An event id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "child_event_count",
                "editorial_segments",
                "hero_image",
                "image_count",
                "location",
                "name",
                "start_date",
                "type"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Events.Event"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "404": {
            "description": "EventNotFound"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "deprecated": false
      }
    },
    "/v3/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get metadata for multiple images by supplying multiple image ids",
        "description": "",
        "operationId": "Images_GetBatch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Specifies one or more image ids to return. Use comma delimiter when requesting multiple ids.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "alternative_ids",
                "artist",
                "artist_title",
                "asset_family",
                "call_for_image",
                "caption",
                "city",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "country",
                "credit_line",
                "date_camera_shot",
                "date_created",
                "date_submitted",
                "detail_set",
                "display_set",
                "download_sizes",
                "downloads",
                "editorial_segments",
                "editorial_source",
                "entity_details",
                "event_ids",
                "graphical_style",
                "id",
                "istock_licenses",
                "keywords",
                "largest_downloads",
                "license_model",
                "links",
                "max_dimensions",
                "object_name",
                "orientation",
                "people",
                "prestige",
                "preview",
                "product_types",
                "quality_rank",
                "referral_destinations",
                "state_province",
                "summary_set",
                "thumb",
                "title",
                "uri_oembed"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Images.ImagesDetail"
            }
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "ImageNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/images/{id}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get metadata for a single image by supplying one image id",
        "description": "",
        "operationId": "Images_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "An image id. For more than one image please use the /v3/images endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "alternative_ids",
                "artist",
                "artist_title",
                "asset_family",
                "call_for_image",
                "caption",
                "city",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "country",
                "credit_line",
                "date_camera_shot",
                "date_created",
                "date_submitted",
                "detail_set",
                "display_set",
                "download_sizes",
                "downloads",
                "editorial_segments",
                "editorial_source",
                "entity_details",
                "event_ids",
                "graphical_style",
                "id",
                "istock_licenses",
                "keywords",
                "largest_downloads",
                "license_model",
                "links",
                "max_dimensions",
                "object_name",
                "orientation",
                "people",
                "prestige",
                "preview",
                "product_types",
                "quality_rank",
                "referral_destinations",
                "state_province",
                "summary_set",
                "thumb",
                "title",
                "uri_oembed"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Images.ImagesDetail"
            }
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "ImageNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/images/{id}/similar": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Search for images similar to an image",
        "operationId": "Images_GetSimilarImages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifies an existing image",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "accessrestriction",
                "allowed_use",
                "alternative_ids",
                "artist",
                "asset_family",
                "call_for_image",
                "caption",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_camera_shot",
                "date_created",
                "detail_set",
                "display_set",
                "editorial_segments",
                "editorial_source",
                "entity_details",
                "event_ids",
                "graphical_style",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "max_dimensions",
                "orientation",
                "people",
                "prestige",
                "preview",
                "product_types",
                "quality_rank",
                "referral_destinations",
                "summary_set",
                "thumb",
                "title",
                "uri_oembed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.SearchResults[GettyImages.Models.Search.ImageSearchItem]"
            }
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "ImageNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get Products",
        "operationId": "Products_GetProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields. Allows product download requirements to be returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "download_requirements"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Products.ProductsResult"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "InvalidParameterValue"
          }
        },
        "deprecated": false
      }
    },
    "/v3/purchased-assets": {
      "get": {
        "tags": [
          "Purchases"
        ],
        "summary": "Get Previously Purchased Images and Video",
        "operationId": "Purchases_GetPreviousAssetPurchases",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 75, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD).",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Purchases.PreviousAssetPurchases"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "PageNumberLessThanOne"
          }
        },
        "deprecated": false
      }
    },
    "/v3/purchased-images": {
      "get": {
        "tags": [
          "Purchases"
        ],
        "summary": "Get Previously Purchased Images",
        "operationId": "Purchases_GetPreviousPurchases",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 75, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD).",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Purchases.PreviousPurchases"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "PageNumberLessThanOne"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/events": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for events",
        "operationId": "Search_GetEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Filters to events that start on or after this date. Use ISO 8601 format (e.g., 1999-12-31).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "Filters to events that start on or before this date. Use ISO 8601 format (e.g., 1999-12-31).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "editorial_segment",
            "in": "query",
            "description": "Filters to events with a matching editorial segment.",
            "required": false,
            "type": "string",
            "enum": [
              "archival",
              "entertainment",
              "news",
              "publicity",
              "royalty",
              "sport"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Default set is 'id','name','start_date'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "child_event_count",
                "editorial_segments",
                "hero_image",
                "image_count",
                "keywords",
                "location",
                "name",
                "start_date",
                "type"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Request results starting at a page number (default is 1, maximum is 50).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Request number of images to return in each page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Filters to events related to this phrase",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.EventsSearchResult"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/images": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for both creative and editorial images",
        "operationId": "Search_GetImagesByPhrase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_of_people",
            "in": "query",
            "description": "Filter based on the age of individuals in an image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "newborn",
                "baby",
                "child",
                "teenager",
                "young_adult",
                "adult",
                "adults_only",
                "mature_adult",
                "senior_adult",
                "0-1_months",
                "2-5_months",
                "6-11_months",
                "12-17_months",
                "18-23_months",
                "2-3_years",
                "4-5_years",
                "6-7_years",
                "8-9_years",
                "10-11_years",
                "12-13_years",
                "14-15_years",
                "16-17_years",
                "18-19_years",
                "20-24_years",
                "20-29_years",
                "25-29_years",
                "30-34_years",
                "30-39_years",
                "35-39_years",
                "40-44_years",
                "40-49_years",
                "45-49_years",
                "50-54_years",
                "50-59_years",
                "55-59_years",
                "60-64_years",
                "60-69_years",
                "65-69_years",
                "70-79_years",
                "80-89_years",
                "90_plus_years",
                "100_over"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "artists",
            "in": "query",
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "required": false,
            "type": "string"
          },
          {
            "name": "collection_codes",
            "in": "query",
            "description": "Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collections_filter_type",
            "in": "query",
            "description": "Provides searching based on specified collection(s).",
            "required": false,
            "type": "string",
            "enum": [
              "include",
              "exclude"
            ]
          },
          {
            "name": "color",
            "in": "query",
            "description": "Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images.",
            "required": false,
            "type": "string"
          },
          {
            "name": "compositions",
            "in": "query",
            "description": "Filter based on image composition.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "abstract",
                "candid",
                "close_up",
                "copy_space",
                "cut_out",
                "full_frame",
                "full_length",
                "headshot",
                "looking_at_camera",
                "macro",
                "portrait",
                "sparse",
                "still_life",
                "three_quarter_length",
                "waist_up"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "embed_content_only",
            "in": "query",
            "description": "Restrict search results to embeddable images. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ethnicity",
            "in": "query",
            "description": "Filter search results based on the ethnicity of individuals in an image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "black",
                "caucasian",
                "east_asian",
                "hispanic_latino",
                "japanese",
                "middle_eastern",
                "mixed_race_person",
                "multiethnic_group",
                "native_american_first_nations",
                "pacific_islander",
                "south_asian",
                "southeast_asian"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "event_ids",
            "in": "query",
            "description": "Filter based on specific events",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exclude_nudity",
            "in": "query",
            "description": "Excludes images containing nudity. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "accessrestriction",
                "allowed_use",
                "alternative_ids",
                "artist",
                "asset_family",
                "call_for_image",
                "caption",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_camera_shot",
                "date_created",
                "detail_set",
                "display_set",
                "editorial_segments",
                "editorial_source",
                "entity_details",
                "event_ids",
                "graphical_style",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "max_dimensions",
                "orientation",
                "people",
                "prestige",
                "preview",
                "product_types",
                "quality_rank",
                "referral_destinations",
                "summary_set",
                "thumb",
                "title",
                "uri_oembed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "file_types",
            "in": "query",
            "description": "Return only images having a specific file type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "eps",
                "jpg"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "graphical_styles",
            "in": "query",
            "description": "Filter based on graphical style of the image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "fine_art",
                "illustration",
                "photography"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keyword_ids",
            "in": "query",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "license_models",
            "in": "query",
            "description": "Specifies the image licensing model(s).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "rightsmanaged",
                "royaltyfree"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "minimum_size",
            "in": "query",
            "description": "Filter based on minimum size requested.",
            "required": false,
            "type": "string",
            "enum": [
              "x_small",
              "small",
              "medium",
              "large",
              "x_large",
              "xx_large"
            ]
          },
          {
            "name": "number_of_people",
            "in": "query",
            "description": "Filter based on the number of people in the image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "none",
                "one",
                "two",
                "group"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orientations",
            "in": "query",
            "description": "Return only images with selected aspect ratios.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Horizontal",
                "Vertical",
                "Square",
                "PanoramicHorizontal",
                "PanoramicVertical"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Request results starting at a page number (default is 1).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Request number of images to return in each page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Search images using a search phrase.",
            "required": false,
            "type": "string"
          },
          {
            "name": "prestige_content_only",
            "in": "query",
            "description": "Restrict search results to prestige images. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "product_types",
            "in": "query",
            "description": "Filter images to those having product types from the selected list.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "easyaccess",
                "editorialsubscription",
                "imagepack",
                "premiumaccess",
                "royaltyfreesubscription"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Select sort order of results.",
            "required": false,
            "type": "string",
            "enum": [
              "best_match",
              "most_popular",
              "newest"
            ]
          },
          {
            "name": "specific_people",
            "in": "query",
            "description": "Return only images associated with specific people (using a comma-delimited list).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.SearchResults[GettyImages.Models.Search.ImageSearchItem]"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/images/creative": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for creative images only",
        "operationId": "Search_GetCreativeImagesByPhrase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_of_people",
            "in": "query",
            "description": "Filter based on the age of individuals in an image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "newborn",
                "baby",
                "child",
                "teenager",
                "young_adult",
                "adult",
                "adults_only",
                "mature_adult",
                "senior_adult",
                "0-1_months",
                "2-5_months",
                "6-11_months",
                "12-17_months",
                "18-23_months",
                "2-3_years",
                "4-5_years",
                "6-7_years",
                "8-9_years",
                "10-11_years",
                "12-13_years",
                "14-15_years",
                "16-17_years",
                "18-19_years",
                "20-24_years",
                "20-29_years",
                "25-29_years",
                "30-34_years",
                "30-39_years",
                "35-39_years",
                "40-44_years",
                "40-49_years",
                "45-49_years",
                "50-54_years",
                "50-59_years",
                "55-59_years",
                "60-64_years",
                "60-69_years",
                "65-69_years",
                "70-79_years",
                "80-89_years",
                "90_plus_years",
                "100_over"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "artists",
            "in": "query",
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "required": false,
            "type": "string"
          },
          {
            "name": "collection_codes",
            "in": "query",
            "description": "Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collections_filter_type",
            "in": "query",
            "description": "Use to include or exclude collections from search.",
            "required": false,
            "type": "string",
            "enum": [
              "include",
              "exclude"
            ]
          },
          {
            "name": "color",
            "in": "query",
            "description": "Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244).",
            "required": false,
            "type": "string"
          },
          {
            "name": "compositions",
            "in": "query",
            "description": "Filter based on image composition.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "abstract",
                "candid",
                "close_up",
                "copy_space",
                "cut_out",
                "full_frame",
                "full_length",
                "headshot",
                "looking_at_camera",
                "macro",
                "portrait",
                "sparse",
                "still_life",
                "three_quarter_length",
                "waist_up"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "embed_content_only",
            "in": "query",
            "description": "Restrict search results to embeddable images. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "ethnicity",
            "in": "query",
            "description": "Filter search results based on the ethnicity of individuals in an image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "black",
                "caucasian",
                "east_asian",
                "hispanic_latino",
                "japanese",
                "middle_eastern",
                "mixed_race_person",
                "multiethnic_group",
                "native_american_first_nations",
                "pacific_islander",
                "south_asian",
                "southeast_asian"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exclude_nudity",
            "in": "query",
            "description": "Excludes images containing nudity. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "alternative_ids",
                "artist",
                "asset_family",
                "call_for_image",
                "caption",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_camera_shot",
                "date_created",
                "detail_set",
                "display_set",
                "graphical_style",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "max_dimensions",
                "orientation",
                "prestige",
                "preview",
                "product_types",
                "quality_rank",
                "referral_destinations",
                "summary_set",
                "thumb",
                "title",
                "uri_oembed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "file_types",
            "in": "query",
            "description": "Return only images having a specific file type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "eps",
                "jpg"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "graphical_styles",
            "in": "query",
            "description": "Filter based on graphical style of the image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "fine_art",
                "illustration",
                "photography"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keyword_ids",
            "in": "query",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "license_models",
            "in": "query",
            "description": "Specifies the image licensing model(s).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "rightsmanaged",
                "royaltyfree"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "minimum_size",
            "in": "query",
            "description": "Filter based on minimum size requested.",
            "required": false,
            "type": "string",
            "enum": [
              "x_small",
              "small",
              "medium",
              "large",
              "x_large",
              "xx_large"
            ]
          },
          {
            "name": "number_of_people",
            "in": "query",
            "description": "Filter based on the number of people in the image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "none",
                "one",
                "two",
                "group"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orientations",
            "in": "query",
            "description": "Return only images with selected aspect ratios.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Horizontal",
                "Vertical",
                "Square",
                "PanoramicHorizontal",
                "PanoramicVertical"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Request results starting at a page number (default is 1).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Request number of images to return in each page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Search images using a search phrase.",
            "required": false,
            "type": "string"
          },
          {
            "name": "prestige_content_only",
            "in": "query",
            "description": "Restrict search results to prestige images. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "product_types",
            "in": "query",
            "description": "Filter images to those having product types from the selected list.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "easyaccess",
                "editorialsubscription",
                "imagepack",
                "premiumaccess",
                "royaltyfreesubscription"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Select sort order of results.",
            "required": false,
            "type": "string",
            "enum": [
              "best_match",
              "most_popular",
              "newest"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.CreativeImageSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/images/editorial": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for editorial images only",
        "operationId": "Search_GetEditorialImagesByPhrase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_of_people",
            "in": "query",
            "description": "Filter based on the age of individuals in an image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "newborn",
                "baby",
                "child",
                "teenager",
                "young_adult",
                "adult",
                "adults_only",
                "mature_adult",
                "senior_adult",
                "0-1_months",
                "2-5_months",
                "6-11_months",
                "12-17_months",
                "18-23_months",
                "2-3_years",
                "4-5_years",
                "6-7_years",
                "8-9_years",
                "10-11_years",
                "12-13_years",
                "14-15_years",
                "16-17_years",
                "18-19_years",
                "20-24_years",
                "20-29_years",
                "25-29_years",
                "30-34_years",
                "30-39_years",
                "35-39_years",
                "40-44_years",
                "40-49_years",
                "45-49_years",
                "50-54_years",
                "50-59_years",
                "55-59_years",
                "60-64_years",
                "60-69_years",
                "65-69_years",
                "70-79_years",
                "80-89_years",
                "90_plus_years",
                "100_over"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "artists",
            "in": "query",
            "description": "Search for images by specific artists (free-text, comma-separated list of artists).",
            "required": false,
            "type": "string"
          },
          {
            "name": "collection_codes",
            "in": "query",
            "description": "Filter by collections (comma-separated list of collection codes). Include or exclude based on collections_filter_type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collections_filter_type",
            "in": "query",
            "description": "Use to include or exclude collections from search.",
            "required": false,
            "type": "string",
            "enum": [
              "include",
              "exclude"
            ]
          },
          {
            "name": "compositions",
            "in": "query",
            "description": "Filter based on image composition.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "abstract",
                "candid",
                "close_up",
                "copy_space",
                "cut_out",
                "full_frame",
                "full_length",
                "headshot",
                "looking_at_camera",
                "macro",
                "portrait",
                "sparse",
                "still_life",
                "three_quarter_length",
                "waist_up"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "editorial_segments",
            "in": "query",
            "description": "Return only events with a matching editorial segment.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "archival",
                "entertainment",
                "news",
                "publicity",
                "royalty",
                "sport"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "embed_content_only",
            "in": "query",
            "description": "Restrict search results to embeddable images. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31).",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity_uris",
            "in": "query",
            "description": "specify linked data entity uri.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ethnicity",
            "in": "query",
            "description": "Filter search results based on the ethnicity of individuals in an image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "black",
                "caucasian",
                "east_asian",
                "hispanic_latino",
                "japanese",
                "middle_eastern",
                "mixed_race_person",
                "multiethnic_group",
                "native_american_first_nations",
                "pacific_islander",
                "south_asian",
                "southeast_asian"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "event_ids",
            "in": "query",
            "description": "Filter based on specific events",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exclude_nudity",
            "in": "query",
            "description": "Excludes images containing nudity. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "alternative_ids",
                "artist",
                "asset_family",
                "call_for_image",
                "caption",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_camera_shot",
                "date_created",
                "detail_set",
                "display_set",
                "editorial_segments",
                "editorial_source",
                "entity_details",
                "event_ids",
                "graphical_style",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "max_dimensions",
                "orientation",
                "people",
                "preview",
                "product_types",
                "quality_rank",
                "referral_destinations",
                "summary_set",
                "thumb",
                "title",
                "uri_oembed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "file_types",
            "in": "query",
            "description": "Return only images having a specific file type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "eps",
                "jpg"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "graphical_styles",
            "in": "query",
            "description": "Filter based on graphical style of the image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "photography",
                "illustration"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keyword_ids",
            "in": "query",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "minimum_quality_rank",
            "in": "query",
            "description": "Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "minimum_size",
            "in": "query",
            "description": "Filter based on minimum size requested.",
            "required": false,
            "type": "string",
            "enum": [
              "x_small",
              "small",
              "medium",
              "large",
              "x_large",
              "xx_large"
            ]
          },
          {
            "name": "number_of_people",
            "in": "query",
            "description": "Filter based on the number of people in the image.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "none",
                "one",
                "two",
                "group"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orientations",
            "in": "query",
            "description": "Return only images with selected aspect ratios.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Horizontal",
                "Vertical",
                "Square",
                "PanoramicHorizontal",
                "PanoramicVertical"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Request results starting at a page number (default is 1).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Request number of images to return in each page.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Search images using a search phrase.",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_types",
            "in": "query",
            "description": "Filter images to those having product types from the selected list.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "easyaccess",
                "editorialsubscription",
                "imagepack",
                "premiumaccess",
                "royaltyfreesubscription"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Select sort order of results.",
            "required": false,
            "type": "string",
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "oldest"
            ]
          },
          {
            "name": "specific_people",
            "in": "query",
            "description": "Return only images associated with specific people (using a comma-delimited list).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31).",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.EditorialImageSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/videos": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for both creative and editorial videos",
        "operationId": "Search_GetVideosByPhrase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_of_people",
            "in": "query",
            "description": "Provides filtering according to the age of individuals in a video.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "newborn",
                "baby",
                "child",
                "teenager",
                "young_adult",
                "adult",
                "adults_only",
                "mature_adult",
                "senior_adult",
                "0-1_months",
                "2-5_months",
                "6-11_months",
                "12-17_months",
                "18-23_months",
                "2-3_years",
                "4-5_years",
                "6-7_years",
                "8-9_years",
                "10-11_years",
                "12-13_years",
                "14-15_years",
                "16-17_years",
                "18-19_years",
                "20-24_years",
                "20-29_years",
                "25-29_years",
                "30-34_years",
                "30-39_years",
                "35-39_years",
                "40-44_years",
                "40-49_years",
                "45-49_years",
                "50-54_years",
                "50-59_years",
                "55-59_years",
                "60-64_years",
                "60-69_years",
                "65-69_years",
                "70-79_years",
                "80-89_years",
                "90_plus_years",
                "100_over"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collection_codes",
            "in": "query",
            "description": "Provides filtering by collection code.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collections_filter_type",
            "in": "query",
            "description": "Provides searching based on specified collection(s).",
            "required": false,
            "type": "string",
            "enum": [
              "include",
              "exclude"
            ]
          },
          {
            "name": "editorial_video_types",
            "in": "query",
            "description": "Allows filtering by types of video.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "raw",
                "produced"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exclude_nudity",
            "in": "query",
            "description": "Excludes images containing nudity. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "artist",
                "asset_family",
                "caption",
                "clip_length",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_created",
                "detail_set",
                "display_set",
                "editorial_segments",
                "entity_details",
                "era",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "mastered_to",
                "originally_shot_on",
                "object_name",
                "preview",
                "product_types",
                "referral_destinations",
                "shot_speed",
                "source",
                "summary_set",
                "thumb",
                "title",
                "istock_licenses"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format_available",
            "in": "query",
            "description": "Filters according to the digital video format available on a film asset.",
            "required": false,
            "type": "string",
            "enum": [
              "sd",
              "hd",
              "4k"
            ]
          },
          {
            "name": "frame_rates",
            "in": "query",
            "description": "Provides filtering by video frame rate (frames/second).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "23.98",
                "24",
                "25",
                "29.97",
                "30",
                "50",
                "59.94",
                "60"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keyword_ids",
            "in": "query",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "license_models",
            "in": "query",
            "description": "Specifies the video licensing model(s).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "rightsready",
                "royaltyfree"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Free-text search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_types",
            "in": "query",
            "description": "Provides filtering by a list of product types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "easyaccess",
                "editorialsubscription",
                "imagepack",
                "premiumaccess",
                "royaltyfreesubscription"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Allows sorting of results.",
            "required": false,
            "type": "string",
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "oldest"
            ]
          },
          {
            "name": "specific_people",
            "in": "query",
            "description": "Provides filtering by specific peoples' names.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.VideoSearchResults[GettyImages.Models.Artists.VideoSearchItem]"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/videos/creative": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for creative videos",
        "operationId": "Search_GetCreativeVideosByPhrase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_of_people",
            "in": "query",
            "description": "Provides filtering according to the age of individuals in a video.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "newborn",
                "baby",
                "child",
                "teenager",
                "young_adult",
                "adult",
                "adults_only",
                "mature_adult",
                "senior_adult",
                "0-1_months",
                "2-5_months",
                "6-11_months",
                "12-17_months",
                "18-23_months",
                "2-3_years",
                "4-5_years",
                "6-7_years",
                "8-9_years",
                "10-11_years",
                "12-13_years",
                "14-15_years",
                "16-17_years",
                "18-19_years",
                "20-24_years",
                "20-29_years",
                "25-29_years",
                "30-34_years",
                "30-39_years",
                "35-39_years",
                "40-44_years",
                "40-49_years",
                "45-49_years",
                "50-54_years",
                "50-59_years",
                "55-59_years",
                "60-64_years",
                "60-69_years",
                "65-69_years",
                "70-79_years",
                "80-89_years",
                "90_plus_years",
                "100_over"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collection_codes",
            "in": "query",
            "description": "Provides filtering by collection code.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collections_filter_type",
            "in": "query",
            "description": "Provides searching based on specified collection(s).",
            "required": false,
            "type": "string",
            "enum": [
              "include",
              "exclude"
            ]
          },
          {
            "name": "exclude_nudity",
            "in": "query",
            "description": "Excludes images containing nudity. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "artist",
                "asset_family",
                "caption",
                "clip_length",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_created",
                "detail_set",
                "display_set",
                "era",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "mastered_to",
                "originally_shot_on",
                "object_name",
                "preview",
                "product_types",
                "referral_destinations",
                "shot_speed",
                "source",
                "summary_set",
                "thumb",
                "title"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format_available",
            "in": "query",
            "description": "Filters according to the digital video format available on a film asset.",
            "required": false,
            "type": "string",
            "enum": [
              "sd",
              "hd",
              "4k"
            ]
          },
          {
            "name": "frame_rates",
            "in": "query",
            "description": "Provides filtering by video frame rate (frames/second).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "23.98",
                "24",
                "25",
                "29.97",
                "30",
                "50",
                "59.94",
                "60"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keyword_ids",
            "in": "query",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "license_models",
            "in": "query",
            "description": "Specifies the video licensing model(s).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "rightsready",
                "royaltyfree"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Free-text search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_types",
            "in": "query",
            "description": "Allows filtering by a list of product types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "easyaccess",
                "editorialsubscription",
                "imagepack",
                "premiumaccess",
                "royaltyfreesubscription"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Allows sorting of results.",
            "required": false,
            "type": "string",
            "enum": [
              "best_match",
              "most_popular",
              "newest"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.CreativeVideoSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/search/videos/editorial": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for editorial videos",
        "operationId": "Search_GetEditorialVideosByPhrase",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "age_of_people",
            "in": "query",
            "description": "Provides filtering according to the age of individuals in a video.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "newborn",
                "baby",
                "child",
                "teenager",
                "young_adult",
                "adult",
                "adults_only",
                "mature_adult",
                "senior_adult",
                "0-1_months",
                "2-5_months",
                "6-11_months",
                "12-17_months",
                "18-23_months",
                "2-3_years",
                "4-5_years",
                "6-7_years",
                "8-9_years",
                "10-11_years",
                "12-13_years",
                "14-15_years",
                "16-17_years",
                "18-19_years",
                "20-24_years",
                "20-29_years",
                "25-29_years",
                "30-34_years",
                "30-39_years",
                "35-39_years",
                "40-44_years",
                "40-49_years",
                "45-49_years",
                "50-54_years",
                "50-59_years",
                "55-59_years",
                "60-64_years",
                "60-69_years",
                "65-69_years",
                "70-79_years",
                "80-89_years",
                "90_plus_years",
                "100_over"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collection_codes",
            "in": "query",
            "description": "Provides filtering by collection code.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collections_filter_type",
            "in": "query",
            "description": "Provides searching based on specified collection(s).",
            "required": false,
            "type": "string",
            "enum": [
              "include",
              "exclude"
            ]
          },
          {
            "name": "editorial_video_types",
            "in": "query",
            "description": "Allows filtering by types of video.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "raw",
                "produced"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "entity_uris",
            "in": "query",
            "description": "specify link data entity uri.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "exclude_nudity",
            "in": "query",
            "description": "Excludes images containing nudity. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "artist",
                "asset_family",
                "caption",
                "clip_length",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_created",
                "detail_set",
                "display_set",
                "editorial_segments",
                "entity_details",
                "era",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "mastered_to",
                "originally_shot_on",
                "object_name",
                "preview",
                "product_types",
                "referral_destinations",
                "shot_speed",
                "source",
                "summary_set",
                "thumb",
                "title",
                "istock_licenses"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format_available",
            "in": "query",
            "description": "Filters according to the digital video format available on a film asset.",
            "required": false,
            "type": "string",
            "enum": [
              "sd",
              "hd",
              "4k"
            ]
          },
          {
            "name": "frame_rates",
            "in": "query",
            "description": "Provides filtering by video frame rate (frames/second).",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "23.98",
                "24",
                "25",
                "29.97",
                "30",
                "50",
                "59.94",
                "60"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keyword_ids",
            "in": "query",
            "description": "Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "phrase",
            "in": "query",
            "description": "Free-text search query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "product_types",
            "in": "query",
            "description": "Allows filtering by a list of product types.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "easyaccess",
                "editorialsubscription",
                "imagepack",
                "premiumaccess",
                "royaltyfreesubscription"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Allows sorting of results.",
            "required": false,
            "type": "string",
            "enum": [
              "best_match",
              "most_popular",
              "newest",
              "oldest"
            ]
          },
          {
            "name": "specific_people",
            "in": "query",
            "description": "Allows filtering by specific peoples' names.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Search.EditorialVideoSearchResults"
            }
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          }
        },
        "deprecated": false
      }
    },
    "/v3/usage-batches/{id}": {
      "put": {
        "tags": [
          "Usage"
        ],
        "summary": "Report usage of assets via a batch format.",
        "operationId": "Usage_Put",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Specifies up to 1000 sets of asset Id, usage count, and date of use to submit usages for. \r\n            Note that all asset Ids specified must be valid or the operation will fail causing no usages to be recorded. \r\n            The date format should be ISO 8601 (ex: YYYY-MM-DD), time is not needed.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/report_usage_batch_request"
            }
          },
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Specifies a unique batch transaction id to identify the report.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - All usages reported were successfully recorded.",
            "schema": {
              "$ref": "#/definitions/report_usage_batch_response"
            }
          },
          "401": {
            "description": "AuthorizationTokenRequired - Authorization token was missing or not valid."
          },
          "400": {
            "description": "InvalidRequest - The content of the request was invalid. Most commonly this is due to either too many assets specified, no assets or invalid JSON."
          },
          "409": {
            "description": "TransactionIdDuplicated - The id parameter supplied was already used in a previous usage report."
          }
        },
        "deprecated": false
      }
    },
    "/v3/videos": {
      "get": {
        "tags": [
          "Videos"
        ],
        "summary": "Get metadata for multiple videos by supplying multiple video ids",
        "description": "",
        "operationId": "Videos_GetBatch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Specifies one or more video ids to return. Use comma delimiter when requesting multiple ids.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Specifies fields to return. Defaults to 'summary_set'.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "allowed_use",
                "artist",
                "asset_family",
                "caption",
                "clip_length",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "copyright",
                "comp",
                "date_created",
                "detail_set",
                "display_set",
                "download_sizes",
                "downloads",
                "era",
                "editorial_segments",
                "entity_details",
                "keywords",
                "license_model",
                "mastered_to",
                "originally_shot_on",
                "object_name",
                "preview",
                "product_types",
                "referral_destinations",
                "shot_speed",
                "source",
                "summary_set",
                "thumb",
                "title",
                "istock_licenses"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Videos.VideosDetail"
            }
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "VideosNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/videos/{id}": {
      "get": {
        "tags": [
          "Videos"
        ],
        "summary": "Get metadata for a single video by supplying one video id",
        "operationId": "Videos_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A video id. For more than one video please use the /v3/video endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "comma delimited list of fields to retrive for the video",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "allowed_use",
                "artist",
                "asset_family",
                "caption",
                "clip_length",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "copyright",
                "comp",
                "date_created",
                "detail_set",
                "display_set",
                "download_sizes",
                "downloads",
                "era",
                "editorial_segments",
                "entity_details",
                "keywords",
                "license_model",
                "mastered_to",
                "originally_shot_on",
                "object_name",
                "preview",
                "product_types",
                "referral_destinations",
                "shot_speed",
                "source",
                "summary_set",
                "thumb",
                "title",
                "istock_licenses"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Videos.VideoDetail"
            }
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "VideosNotFound"
          }
        },
        "deprecated": false
      }
    },
    "/v3/videos/{id}/similar": {
      "get": {
        "tags": [
          "Videos"
        ],
        "summary": "***BETA*** Get videos similar to a video by supplying one video id",
        "operationId": "Videos_GetSimilarVideos",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Api-Key",
            "in": "header",
            "description": "Provide your API key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Provide a header to specify the language of result values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Provide access token in the format of 'Bearer {token}'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A video id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "comma delimited list of fields to retrive for the videos",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allowed_use",
                "artist",
                "asset_family",
                "caption",
                "clip_length",
                "collection_code",
                "collection_id",
                "collection_name",
                "color_type",
                "comp",
                "copyright",
                "date_created",
                "detail_set",
                "display_set",
                "editorial_segments",
                "entity_details",
                "era",
                "id",
                "keywords",
                "largest_downloads",
                "license_model",
                "mastered_to",
                "originally_shot_on",
                "object_name",
                "preview",
                "product_types",
                "referral_destinations",
                "shot_speed",
                "source",
                "summary_set",
                "thumb",
                "title",
                "istock_licenses"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Identifies page to return. Default is 1.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Specifies page size. Default is 30, maximum page_size is 100.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GettyImages.Models.Artists.VideoSearchResults"
            }
          },
          "403": {
            "description": "UnauthorizedDisplaySize"
          },
          "400": {
            "description": "InvalidParameterValue"
          },
          "401": {
            "description": "AuthorizationTokenRequired"
          },
          "404": {
            "description": "VideosNotFound"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "System.Object": {
      "type": "object",
      "properties": {}
    },
    "GettyImages.Models.Artists.ImageSearchResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.ImageSearchItem"
          }
        }
      }
    },
    "GettyImages.Models.Artists.ImageSearchItem": {
      "type": "object",
      "properties": {
        "alternative_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "asset_family": {
          "type": "string"
        },
        "asset_type": {
          "enum": [
            "Image",
            "Film"
          ],
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "date_submitted": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.DisplaySize"
          }
        },
        "id": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.Keyword"
          }
        },
        "license_model": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Artists.DisplaySize": {
      "type": "object",
      "properties": {
        "is_watermarked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "aspect_ratio": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Artists.Keyword": {
      "type": "object",
      "properties": {
        "keyword_id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Artists.VideoSearchResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.VideoSearchItem"
          }
        }
      }
    },
    "GettyImages.Models.Artists.VideoSearchItem": {
      "type": "object",
      "properties": {
        "alternative_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "asset_family": {
          "type": "string"
        },
        "asset_type": {
          "enum": [
            "Image",
            "Film"
          ],
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "date_submitted": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.DisplaySize"
          }
        },
        "id": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.Keyword"
          }
        },
        "license_model": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Collections.CollectionsList": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Collections.Collection"
          }
        }
      }
    },
    "GettyImages.Models.Collections.Collection": {
      "type": "object",
      "properties": {
        "asset_family": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "license_model": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GettyImages.Models.Countries.CountriesList": {
      "type": "object",
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Countries.Country"
          }
        }
      }
    },
    "GettyImages.Models.Countries.Country": {
      "type": "object",
      "properties": {
        "iso_alpha_2": {
          "type": "string"
        },
        "iso_alpha_3": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.CuratedSets.CuratedSet": {
      "type": "object",
      "properties": {
        "set_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_updated": {
          "format": "date-time",
          "type": "string"
        },
        "hero_image_uri": {
          "type": "string"
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GettyImages.Models.Customers.CustomerInfoResponse": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "email_address": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        }
      }
    },
    "GettyImages.Services.Core.SecurityToken": {
      "type": "object",
      "properties": {
        "SystemId": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "Expires": {
          "format": "date-time",
          "type": "string"
        },
        "SecureOnly": {
          "type": "boolean"
        },
        "ClientId": {
          "type": "string"
        },
        "ClientIP": {
          "type": "string"
        },
        "RememberedUser": {
          "type": "boolean"
        },
        "AuthId": {
          "type": "string"
        },
        "RenewalEnds": {
          "format": "date-time",
          "type": "string"
        },
        "ActAsSystemId": {
          "type": "string"
        },
        "VisitorId": {
          "type": "string"
        },
        "SystemRole": {
          "enum": [
            "CustomerFacing",
            "Admin",
            "Automation"
          ],
          "type": "string"
        },
        "AdminId": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Downloads.PremiumAccessDownloadData": {
      "type": "object",
      "properties": {
        "download_notes": {
          "type": "string"
        },
        "project_code": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Downloads.GetDownloadsResponse": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Downloads.GetDownloadsResponse.Download"
          }
        }
      }
    },
    "GettyImages.Models.Downloads.GetDownloadsResponse.Download": {
      "type": "object",
      "properties": {
        "date_downloaded": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "product_type": {
          "type": "string"
        },
        "thumb_uri": {
          "type": "string"
        },
        "agreement_name": {
          "type": "string"
        },
        "download_details": {
          "$ref": "#/definitions/GettyImages.Models.Downloads.GetDownloadsResponse.DownloadDetails"
        },
        "user": {
          "$ref": "#/definitions/GettyImages.Models.Downloads.User"
        },
        "size_name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Downloads.GetDownloadsResponse.DownloadDetails": {
      "type": "object",
      "properties": {
        "download_notes": {
          "type": "string"
        },
        "project_code": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Downloads.User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "middle_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Events.Event": {
      "type": "object",
      "properties": {
        "child_event_count": {
          "format": "int32",
          "type": "integer"
        },
        "editorial_segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hero_image": {
          "$ref": "#/definitions/GettyImages.Models.HeroImage"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "image_count": {
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/GettyImages.Models.LocationEvent"
        },
        "name": {
          "type": "string"
        },
        "start_date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GettyImages.Models.HeroImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.HeroImageDisplaySize"
          }
        }
      }
    },
    "GettyImages.Models.LocationEvent": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state_province": {
          "type": "string"
        },
        "venue": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.HeroImageDisplaySize": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "is_watermarked": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Events.EventsResult": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Events.Event"
          }
        },
        "events_not_found": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "GettyImages.Models.Images.ImagesDetail": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Images.ImageDetail"
          }
        },
        "images_not_found": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GettyImages.Models.Images.ImageDetail": {
      "type": "object",
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/GettyImages.Models.AllowedUse"
        },
        "alternative_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artist": {
          "type": "string"
        },
        "artist_title": {
          "type": "string"
        },
        "asset_family": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_id": {
          "format": "int32",
          "type": "integer"
        },
        "collection_name": {
          "type": "string"
        },
        "color_type": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "credit_line": {
          "type": "string"
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_submitted": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Images.ImageDetailDisplaySize"
          }
        },
        "download_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Images.ImageDownloadSize"
          }
        },
        "editorial_segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "editorial_source": {
          "$ref": "#/definitions/GettyImages.Models.Images.EditorialSource"
        },
        "event_ids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "graphical_style": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Keyword"
          }
        },
        "largest_downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Images.ImageDownloadSize"
          }
        },
        "license_model": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Images.Link"
          }
        },
        "max_dimensions": {
          "$ref": "#/definitions/GettyImages.Models.MaxDimensions"
        },
        "orientation": {
          "type": "string"
        },
        "people": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prestige": {
          "type": "boolean"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.ReferralDestination"
          }
        },
        "state_province": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "uri_oembed": {
          "type": "string"
        },
        "istock_licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.IStockLicense"
          }
        }
      }
    },
    "GettyImages.Models.AllowedUse": {
      "type": "object",
      "properties": {
        "how_can_i_use_it": {
          "description": "Indicates how the asset can be used",
          "type": "string"
        },
        "release_info": {
          "description": "Indicates release status",
          "type": "string"
        },
        "usage_restrictions": {
          "description": "Indicates asset usage restriction, if any",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GettyImages.Models.Images.ImageDetailDisplaySize": {
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "description": "Indicates the height in pixels",
          "type": "integer"
        },
        "is_watermarked": {
          "description": "Indicates whether the image is watermarked.",
          "type": "boolean"
        },
        "name": {
          "description": "Identifies the name of the display size",
          "type": "string"
        },
        "uri": {
          "description": "Identifies the URI for the image",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "description": "Indicates the width in pixels",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.Images.ImageDownloadSize": {
      "type": "object",
      "properties": {
        "bytes": {
          "format": "int32",
          "type": "integer"
        },
        "downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Images.ImageDownloadAuthorization"
          }
        },
        "height": {
          "format": "int32",
          "type": "integer"
        },
        "media_type": {
          "type": "string"
        },
        "name": {
          "enum": [
            "x_small",
            "small",
            "medium",
            "large",
            "x_large",
            "xx_large"
          ],
          "type": "string"
        },
        "width": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.Images.EditorialSource": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Keyword": {
      "type": "object",
      "properties": {
        "keyword_id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "relevance": {
          "format": "int32",
          "type": "integer"
        },
        "entity_uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entity_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GettyImages.Models.Images.Link": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.MaxDimensions": {
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.ReferralDestination": {
      "type": "object",
      "properties": {
        "site_name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.IStockLicense": {
      "type": "object",
      "properties": {
        "license_type": {
          "type": "string"
        },
        "credits": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.Images.ImageDownloadAuthorization": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "product_type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "agreement_name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Search.SearchResults[GettyImages.Models.Search.ImageSearchItem]": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItem"
          }
        }
      }
    },
    "GettyImages.Models.Search.ImageSearchItem": {
      "type": "object",
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/GettyImages.Models.AllowedUse"
        },
        "alternative_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artist": {
          "type": "string"
        },
        "asset_family": {
          "type": "string"
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_id": {
          "format": "int32",
          "type": "integer"
        },
        "collection_name": {
          "type": "string"
        },
        "color_type": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItemDisplaySize"
          }
        },
        "editorial_segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "event_ids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "graphical_style": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Keyword"
          }
        },
        "largest_downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Download"
          }
        },
        "license_model": {
          "type": "string"
        },
        "max_dimensions": {
          "$ref": "#/definitions/GettyImages.Models.MaxDimensions"
        },
        "orientation": {
          "type": "string"
        },
        "people": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prestige": {
          "type": "boolean"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.ReferralDestination"
          }
        },
        "title": {
          "type": "string"
        },
        "uri_oembed": {
          "type": "string"
        },
        "istock_licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.IStockLicense"
          }
        }
      }
    },
    "GettyImages.Models.Search.ImageSearchItemDisplaySize": {
      "type": "object",
      "properties": {
        "is_watermarked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Download": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "product_type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "agreement_name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Products.ProductsResult": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Products.Product"
          }
        }
      }
    },
    "GettyImages.Models.Products.Product": {
      "type": "object",
      "properties": {
        "application_website": {
          "type": "string"
        },
        "credits_remaining": {
          "format": "int32",
          "type": "integer"
        },
        "download_limit": {
          "format": "int32",
          "type": "integer"
        },
        "download_limit_duration": {
          "type": "string"
        },
        "download_limit_reset_utc_date": {
          "format": "date-time",
          "type": "string"
        },
        "downloads_remaining": {
          "format": "int32",
          "type": "integer"
        },
        "expiration_utc_date": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "enum": [
            "active",
            "inactive"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "easyaccess",
            "editorialsubscription",
            "imagepack",
            "premiumaccess",
            "royaltyfreesubscription",
            "creditpack"
          ],
          "type": "string"
        },
        "download_requirements": {
          "$ref": "#/definitions/GettyImages.Models.Products.DownloadRequirements"
        },
        "premium_access_download_requirements": {
          "$ref": "#/definitions/GettyImages.Models.Products.DownloadRequirements"
        },
        "overage": {
          "$ref": "#/definitions/GettyImages.Models.Products.OverageDetails"
        },
        "agreement_name": {
          "type": "string"
        },
        "imagepack_resolution": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Products.DownloadRequirements": {
      "type": "object",
      "properties": {
        "is_note_required": {
          "type": "boolean"
        },
        "is_project_code_required": {
          "type": "boolean"
        },
        "project_codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GettyImages.Models.Products.OverageDetails": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer"
        },
        "remaining": {
          "format": "int32",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "overages_reached": {
          "type": "boolean"
        }
      }
    },
    "GettyImages.Models.Purchases.PreviousPurchases": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "previous_purchases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Purchases.PreviousPurchase"
          }
        }
      }
    },
    "GettyImages.Models.Purchases.PreviousPurchase": {
      "type": "object",
      "properties": {
        "date_purchased": {
          "format": "date-time",
          "type": "string"
        },
        "image_id": {
          "type": "string"
        },
        "license_model": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "thumb_uri": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Purchases.PreviousAssetPurchases": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "previous_purchases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Purchases.PreviousAssetPurchase"
          }
        }
      }
    },
    "GettyImages.Models.Purchases.PreviousAssetPurchase": {
      "type": "object",
      "properties": {
        "date_purchased": {
          "format": "date-time",
          "type": "string"
        },
        "asset_id": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "license_model": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "thumb_uri": {
          "type": "string"
        },
        "size_name": {
          "type": "string"
        },
        "file_size_in_bytes": {
          "type": "string"
        },
        "download_uri": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Search.CreativeImageSearchResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItemCreative"
          }
        }
      }
    },
    "GettyImages.Models.Search.ImageSearchItemCreative": {
      "type": "object",
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/GettyImages.Models.AllowedUse"
        },
        "alternative_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artist": {
          "type": "string"
        },
        "asset_family": {
          "type": "string"
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_id": {
          "format": "int32",
          "type": "integer"
        },
        "collection_name": {
          "type": "string"
        },
        "color_type": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItemDisplaySize"
          }
        },
        "graphical_style": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Keyword"
          }
        },
        "largest_downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Download"
          }
        },
        "license_model": {
          "type": "string"
        },
        "max_dimensions": {
          "$ref": "#/definitions/GettyImages.Models.MaxDimensions"
        },
        "orientation": {
          "type": "string"
        },
        "prestige": {
          "type": "boolean"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.ReferralDestination"
          }
        },
        "title": {
          "type": "string"
        },
        "uri_oembed": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Search.EditorialImageSearchResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItemEditorial"
          }
        }
      }
    },
    "GettyImages.Models.Search.ImageSearchItemEditorial": {
      "type": "object",
      "properties": {
        "allowed_use": {
          "$ref": "#/definitions/GettyImages.Models.AllowedUse"
        },
        "alternative_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artist": {
          "type": "string"
        },
        "asset_family": {
          "type": "string"
        },
        "call_for_image": {
          "type": "boolean"
        },
        "caption": {
          "type": "string"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_id": {
          "format": "int32",
          "type": "integer"
        },
        "collection_name": {
          "type": "string"
        },
        "color_type": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "date_camera_shot": {
          "format": "date-time",
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItemDisplaySize"
          }
        },
        "editorial_segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "editorial_source": {
          "$ref": "#/definitions/GettyImages.Models.Search.EditorialSource"
        },
        "event_ids": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "graphical_style": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Keyword"
          }
        },
        "largest_downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Download"
          }
        },
        "license_model": {
          "type": "string"
        },
        "max_dimensions": {
          "$ref": "#/definitions/GettyImages.Models.MaxDimensions"
        },
        "orientation": {
          "type": "string"
        },
        "people": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quality_rank": {
          "format": "int32",
          "type": "integer"
        },
        "referral_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.ReferralDestination"
          }
        },
        "title": {
          "type": "string"
        },
        "uri_oembed": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Search.EditorialSource": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.Search.VideoSearchResults[GettyImages.Models.Artists.VideoSearchItem]": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Artists.VideoSearchItem"
          }
        }
      }
    },
    "GettyImages.Models.Search.CreativeVideoSearchResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.VideoSearchItem"
          }
        }
      }
    },
    "GettyImages.Models.Search.VideoSearchItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "allowed_use": {
          "$ref": "#/definitions/GettyImages.Models.AllowedUse"
        },
        "artist": {
          "type": "string"
        },
        "asset_family": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "clip_length": {
          "type": "string"
        },
        "collection_id": {
          "format": "int32",
          "type": "integer"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "color_type": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.VideoSearchItemDisplaySize"
          }
        },
        "era": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Keyword"
          }
        },
        "largest_downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Download"
          }
        },
        "license_model": {
          "type": "string"
        },
        "mastered_to": {
          "type": "string"
        },
        "originally_shot_on": {
          "type": "string"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referral_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.ReferralDestination"
          }
        },
        "shot_speed": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "istock_licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.IStockLicense"
          }
        }
      }
    },
    "GettyImages.Models.Search.VideoSearchItemDisplaySize": {
      "type": "object",
      "properties": {
        "is_watermarked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "aspect_ratio": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Search.EditorialVideoSearchResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.VideoSearchItem"
          }
        }
      }
    },
    "GettyImages.Models.Search.EventsSearchResult": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Events.Event"
          }
        },
        "result_count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.Search.CreativeImageSearchLightResults": {
      "type": "object",
      "properties": {
        "result_count": {
          "format": "int32",
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchLightItemCreative"
          }
        }
      }
    },
    "GettyImages.Models.Search.ImageSearchLightItemCreative": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Search.ImageSearchItemDisplaySize"
          }
        }
      }
    },
    "GettyImages.Models.Videos.VideoDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "allowed_use": {
          "$ref": "#/definitions/GettyImages.Models.AllowedUse"
        },
        "artist": {
          "type": "string"
        },
        "asset_family": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "clip_length": {
          "type": "string"
        },
        "collection_id": {
          "format": "int32",
          "type": "integer"
        },
        "collection_code": {
          "type": "string"
        },
        "collection_name": {
          "type": "string"
        },
        "color_type": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Videos.VideoDetailDisplaySize"
          }
        },
        "download_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Videos.VideoDownloadSize"
          }
        },
        "editorial_segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "era": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Keyword"
          }
        },
        "license_model": {
          "type": "string"
        },
        "mastered_to": {
          "type": "string"
        },
        "originally_shot_on": {
          "type": "string"
        },
        "product_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referral_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.ReferralDestination"
          }
        },
        "shot_speed": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "istock_licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.IStockLicense"
          }
        }
      }
    },
    "GettyImages.Models.Videos.VideoDetailDisplaySize": {
      "type": "object",
      "properties": {
        "is_watermarked": {
          "description": "Indicates whether the image is watermarked.",
          "type": "boolean"
        },
        "name": {
          "description": "Identifies the name of the display size",
          "type": "string"
        },
        "uri": {
          "description": "Identifies the URI for the image",
          "type": "string"
        },
        "aspect_ratio": {
          "description": "Identifies the URI for the image",
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Videos.VideoDownloadSize": {
      "type": "object",
      "properties": {
        "bit_depth": {
          "type": "string"
        },
        "broadcast_video_standard": {
          "type": "string"
        },
        "compression": {
          "type": "string"
        },
        "content_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Videos.VideoDownloadAuthorization"
          }
        },
        "format": {
          "type": "string"
        },
        "frame_rate": {
          "format": "double",
          "type": "number"
        },
        "frame_size": {
          "type": "string"
        },
        "height": {
          "format": "double",
          "type": "number"
        },
        "interlaced": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "width": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GettyImages.Models.Videos.VideoDownloadAuthorization": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "string"
        },
        "product_type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "agreement_name": {
          "type": "string"
        }
      }
    },
    "GettyImages.Models.Videos.VideosDetail": {
      "type": "object",
      "properties": {
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GettyImages.Models.Videos.VideoDetail"
          }
        },
        "videos_not_found": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RegisterAssetsRequest": {
      "description": "Specify request containing the list of asset ids you want to register.",
      "type": "object",
      "properties": {
        "asset_ids": {
          "description": "Specifies the list of asset ids you want to register.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "report_usage_batch_request": {
      "description": "Specifies the request information for the Batch Usages endpoint.",
      "type": "object",
      "properties": {
        "asset_usages": {
          "description": "Identifies the list of asset id, usage count and date of usage combinations to record.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/asset_usage"
          }
        }
      }
    },
    "asset_usage": {
      "description": "Specifies the id, usage quantity, and date of when an asset was used.",
      "type": "object",
      "properties": {
        "asset_id": {
          "description": "Specifies the Id of the asset that was used.",
          "type": "string"
        },
        "quantity": {
          "format": "int32",
          "description": "Specifies the number of times the asset was used.",
          "type": "integer"
        },
        "usage_date": {
          "format": "date-time",
          "description": "Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.",
          "type": "string"
        }
      }
    },
    "report_usage_batch_response": {
      "description": "Specifies the response from the Batch Usages endpoint.",
      "type": "object",
      "properties": {
        "invalid_assets": {
          "description": "Identifies a list of asset ids submitted that did not match known Getty asset ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total_asset_usages_processed": {
          "format": "int32",
          "description": "Specifies the number of asset usage records that were successfully recorded.",
          "type": "integer"
        }
      }
    },
    "AssetChanges": {
      "type": "object",
      "properties": {
        "change_set_id": {
          "description": "Contains the identifier for the change-set resource. Passed into ConfirmAssetChanges requests to confirm receipt of the asset changes in the response.",
          "type": "string"
        },
        "changed_assets": {
          "description": "Contains a list of ChangedAssetList results for the query.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangedAssetDetail"
          }
        }
      }
    },
    "ChangedAssetDetail": {
      "type": "object",
      "properties": {
        "asset_changed_utc_datetime": {
          "format": "date-time",
          "description": "Contains the date of the asset change.",
          "type": "string"
        },
        "asset_lifecycle": {
          "description": "Contains the type of change this asset change is. (i.e. \"New,\" \"Updated\" or \"Deleted\")",
          "type": "string"
        },
        "asset_type": {
          "description": "Contains the type of asset this asset change is (i.e. \"Image\").",
          "type": "string"
        },
        "id": {
          "description": "Contains the Id for the asset change.",
          "type": "string"
        },
        "uri": {
          "description": "Contains the asset download URL for assets with an AssetLifecycle of \"New.\"",
          "type": "string"
        }
      }
    },
    "PartnerChannelList": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerChannel"
          }
        }
      }
    },
    "PartnerChannel": {
      "description": "partner_channel",
      "type": "object",
      "properties": {
        "asset_family": {
          "description": "Specifies the asset family for the channel (e.g. \"editorial\" or \"creative\")",
          "type": "string"
        },
        "channel_id": {
          "format": "int32",
          "description": "Specifies the identification number for the channel",
          "type": "integer"
        },
        "channel_type": {
          "description": "Specifies the channel type (i.e. \"New,\" \"Updated\" or \"Deleted\")",
          "type": "string"
        },
        "start_date": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "notification_count": {
          "format": "int32",
          "description": "Specifies the current count of notifications pending in the channel",
          "type": "integer"
        }
      }
    },
    "BoardList": {
      "type": "object",
      "properties": {
        "boards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardListBoard"
          }
        },
        "board_count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BoardListBoard": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "asset_count": {
          "format": "int32",
          "type": "integer"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_updated": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hero_asset": {
          "$ref": "#/definitions/Asset"
        },
        "name": {
          "type": "string"
        },
        "board_relationship": {
          "type": "string"
        }
      }
    },
    "Asset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "date_added": {
          "format": "date-time",
          "type": "string"
        },
        "display_sizes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisplaySize"
          }
        }
      }
    },
    "DisplaySize": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "BoardInfo": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "BoardCreated": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "BoardDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "asset_count": {
          "format": "int32",
          "type": "integer"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "date_last_updated": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "comment_count": {
          "format": "int32",
          "type": "integer"
        },
        "permissions": {
          "$ref": "#/definitions/BoardPermissions"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "BoardPermissions": {
      "type": "object",
      "properties": {
        "can_delete_board": {
          "type": "boolean"
        },
        "can_invite_to_board": {
          "type": "boolean"
        },
        "can_update_name": {
          "type": "boolean"
        },
        "can_update_description": {
          "type": "boolean"
        },
        "can_add_assets": {
          "type": "boolean"
        },
        "can_remove_assets": {
          "type": "boolean"
        }
      }
    },
    "Links": {
      "type": "object",
      "properties": {
        "invitation": {
          "type": "string"
        },
        "share": {
          "type": "string"
        }
      }
    },
    "BoardAsset": {
      "required": [
        "asset_id"
      ],
      "type": "object",
      "properties": {
        "asset_id": {
          "type": "string"
        }
      }
    },
    "AddBoardAssetsResult": {
      "type": "object",
      "properties": {
        "assets_added": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoardAsset"
          }
        },
        "assets_not_added": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CommentsList": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "permissions": {
          "$ref": "#/definitions/BoardCommentPermissions"
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "created_by": {
          "$ref": "#/definitions/Collaborator"
        },
        "date_created": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/CommentPermissions"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "BoardCommentPermissions": {
      "type": "object",
      "properties": {
        "can_add_comment": {
          "type": "boolean"
        }
      }
    },
    "Collaborator": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    },
    "CommentPermissions": {
      "type": "object",
      "properties": {
        "can_delete_comment": {
          "type": "boolean"
        }
      }
    },
    "CommentRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "CommentCreated": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    }
  }
}